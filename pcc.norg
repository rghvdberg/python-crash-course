* Part I: Basics
** (x)  Chapter 2: Variables and Simple Data Types
   - (x) What Really Happens When You Run hello_world.py
   - (x) Variables
   -- (x) Naming and Using Variables
   -- (x) Avoiding Name Errors When Using Variables
   -- (x) Variables Are Labels
   -- (x) Exercise 2-1: Simple Message
   -- (x) Exercise 2-2: Simple Messages
   - (x) Strings
   -- (x) Changing Case in a String with Methods
   -- (x) Using Variables in Strings
   -- (x) Adding Whitespace to Strings with Tabs or Newlines
   -- (x) Stripping Whitespace
   -- (x) Removing Prefixes
   -- (x) Avoiding Syntax Errors with Strings
   -- (x) Exercise 2-3: Personal Message
   -- (x) Exercise 2-4: Name Cases
   -- (x) Exercise 2-5: Famous Quote
   -- (x) Exercise 2-6: Famous Quote 2
   -- (x) Exercise 2-7: Stripping Names
   -- (x) Exercise 2-8: File Extensions
   - (x) Numbers
   -- (x) Integers
   -- (x) Floats
   -- (x) Integers and Floats
   -- (x) Underscores in Numbers
   -- (x) Multiple Assignment
   -- (x) Constants
   -- (x) Exercise 2-9: Number Eight
   -- (x) Exercise 2-10: Favorite Number
   - (x) Comments
   -- (x) How Do You Write Comments?
   -- (x) What Kinds of Comments Should You Write?
   -- (x) Exercise 2-11: Adding Comments
   - (x) The Zen of Python
   -- (x) Exercise 2-12: Zen of Python
   - Summary
   - (x) ** Chapter 3: Introducing Lists
   - (x) What Is a List?
   -- (x) Accessing Elements in a List
   -- (x) Index Positions Start at 0, Not 1
   -- (x) Using Individual Values from a List
   -- (x) Exercise 3-1: Names
   -- (x) Exercise 3-2: Greetings
   -- (x) Exercise 3-3: Your Own List
   - (x)  Modifying, Adding, and Removing Elements
   -- (x) Modifying Elements in a List
   -- (x) Adding Elements to a List
   -- (x) Removing Elements from a List
   -- (x) Exercise 3-4: Guest List
   -- (x) Exercise 3-5: Changing Guest List
   -- (x) Exercise 3-6: More Guests
   -- (x) Exercise 3-7: Shrinking Guest List
   - (x)  Organizing a List
   -- (x) Sorting a List Permanently with the sort()  Method
   -- (x) Sorting a List Temporarily with the sorted()  Function
   -- (x) Printing a List in Reverse Order
   -- (x) Finding the Length of a List
   -- (x) Exercise 3-8: Seeing the World
   -- (x) Exercise 3-9: Dinner Guests
   -- (x) Exercise 3-10: Every Function
   - (x)  Avoiding Index Errors When Working with Lists
   -- (x) Exercise 3-11: Intentional Error
   - (x)  Summary
** Chapter 4: Working with Lists
   - (x)  Looping Through an Entire List
   -- (x) A Closer Look at Looping
   -- (x) Doing More Work Within a for Loop
   -- (x) Doing Something After a for Loop
   - (x)  Avoiding Indentation Errors
   -- (x) Forgetting to Indent
   -- (x) Forgetting to Indent Additional Lines
   -- (x) Indenting Unnecessarily
   -- (x) Indenting Unnecessarily After the Loop
   -- (x) Forgetting the Colon
   -- (x) Exercise 4-1: Pizzas
   -- (x) Exercise 4-2: Animals
   - (x)  Making Numerical Lists
   -- (x) Using the range()  Function
   -- (x) Using range()  to Make a List of Numbers
   -- (x) Simple Statistics with a List of Numbers
   -- (x) List Comprehensions
   -- (x) Exercise 4-3: Counting to Twenty
   -- (x) Exercise 4-4: One Million
   -- (x) Exercise 4-5: Summing a Million
   -- (x) Exercise 4-6: Odd Numbers
   -- (x) Exercise 4-7: Threes
   -- (x) Exercise 4-8: Cubes
   -- (x) Exercise 4-9: Cube Comprehension
   - (x) Working with Part of a List
   -- (x) Slicing a List
   -- (x) Looping Through a Slice
   -- (x) Copying a List
   -- (x) Exercise 4-10: Slices
   -- (x) Exercise 4-11: My Pizzas, Your Pizzas
   -- (x) Exercise 4-12: More Loops
   - (x)  Tuples
   -- (x) Defining a Tuple
   -- (x) Looping Through All Values in a Tuple
   -- (x) Writing Over a Tuple
   -- (x) Exercise 4-13: Buffet
   - (x)  Styling Your Code
   -- (x) The Style Guide
   -- (x) Indentation
   -- (x) Line Length
   -- (x) Blank Lines
   -- (x) Other Style Guidelines
   -- (x) Exercise 4-14: PEP 8
   -- (x) Exercise 4-15: Code Review
   - (x)  Summary
** Chapter 5: if Statements
   - (x)  A Simple Example
   - (x)  Conditional Tests
   -- (x) Checking for Equality
   -- (x) Ignoring Case When Checking for Equality
   -- (x) Checking for Inequality
   -- (x) Numerical Comparisons
   -- (x) Checking Multiple Conditions
   -- (x) Checking Whether a Value Is in a List
   -- (x) Checking Whether a Value Is Not in a List
   -- (x) Boolean Expressions
   -- (x) Exercise 5-1: Conditional Tests
   -- (x) Exercise 5-2: More Conditional Tests
   - (x)  if Statements
   -- (x) Simple if Statements
   -- (x) if-else Statements
   -- (x) The if-elif-else Chain
   -- (x) Using Multiple elif Blocks
   -- (x) Omitting the else Block
   -- (x) Testing Multiple Conditions
   -- (x) Exercise 5-3: Alien Colors #1
   -- (x) Exercise 5-4: Alien Colors #2
   -- (x) Exercise 5-5: Alien Colors #3
   -- (x) Exercise 5-6: Stages of Life
   -- (x) Exercise 5-7: Favorite Fruit
   - (x)  Using if Statements with Lists
   -- (x) Checking for Special Items
   -- (x) Checking That a List Is Not Empty
   -- (x) Using Multiple Lists
   -- (x) Exercise 5-8: Hello Admin
   -- (x) Exercise 5-9: No Users
   -- (x) Exercise 5-10: Checking Usernames
   -- (x) Exercise 5-11: Ordinal Numbers
   - (x)  Styling Your if Statements
   -- (x) Exercise 5-12: Styling if Statements
   -- (x) Exercise 5-13: Your Ideas
   - (x)  Summary
** Chapter 6: Dictionaries
   - (x)  A Simple Dictionary
   - (x)  Working with Dictionaries
   -- (x) Accessing Values in a Dictionary
   -- (x) Adding New Key-Value Pairs
   -- (x) Starting with an Empty Dictionary
   -- (x) Modifying Values in a Dictionary
   -- (x) Removing Key-Value Pairs
   -- (x) A Dictionary of Similar Objects
   -- (x) Using get()  to Access Values
   -- (x) Exercise 6-1: Person
   -- (x) Exercise 6-2: Favorite Numbers
   -- (x) Exercise 6-3: Glossary
   - (x)  Looping Through a Dictionary
   -- (x) Looping Through All Key-Value Pairs
   -- (x) Looping Through All the Keys in a Dictionary
   -- (x) Looping Through a Dictionaryâ€™s Keys in a Particular Order
   -- (x) Looping Through All Values in a Dictionary
   -- (x) Exercise 6-4: Glossary 2
   -- (x) Exercise 6-5: Rivers
   -- (x) Exercise 6-6: Polling
   - (x) Nesting
   -- (x) A List of Dictionaries
   -- (x) A List in a Dictionary
   -- (x) A Dictionary in a Dictionary
   -- (x) Exercise 6-7: People
   -- (x) Exercise 6-8: Pets
   -- (x) Exercise 6-9: Favorite Places
   -- (x) Exercise 6-10: Favorite Numbers
   -- (x) Exercise 6-11: Cities
   -- (x) Exercise 6-12: Extensions
   -- ( ) Exercise 6-12: Extensions
** Chapter 7: User Input and while Loops
   - (x) How the input()  Function Works
   -- (x) Writing Clear Prompts
   -- (x) Using int()  to Accept Numerical Input
   -- (x) The Modulo Operator
   -- (x) Exercise 7-1: Rental Car
   -- (x) Exercise 7-2: Restaurant Seating
   -- (x) Exercise 7-3: Multiples of Ten
   - (x)  Introducing while Loops
   -- (x) The while Loop in Action
   -- (x) Letting the User Choose When to Quit
   -- (x) Using a Flag
   -- (x) Using break to Exit a Loop
   -- (x) Using continue in a Loop
   -- (x) Avoiding Infinite Loops
   -- (x) Exercise 7-4: Pizza Toppings
   -- (x) Exercise 7-5: Movie Tickets
   -- (x) Exercise 7-6: Three Exits
   -- (x) Exercise 7-7: Infinity
   - (x)  Using a while Loop with Lists and Dictionaries
   -- (x) Moving Items from One List to Another
   -- (x) Removing All Instances of Specific Values from a List
   -- (x) Filling a Dictionary with User Input
   -- (x) Exercise 7-8: Deli
   -- (x) Exercise 7-9: No Pastrami
   -- (x) Exercise 7-10: Dream Vacation
   - (x)  Summary
** Chapter 8: Functions
   - (x)  Defining a Function
   -- (x) Passing Information to a Function
   -- (x) Arguments and Parameters
   -- (x) Exercise 8-1: Message
   -- (x) Exercise 8-2: Favorite Book
   - (x)  Passing Arguments
   -- (x) Positional Arguments
   -- (x) Keyword Arguments
   -- (x) Default Values
   -- (x) Equivalent Function Calls
   -- (x) Avoiding Argument Errors
   -- (x) Exercise 8-3: T-Shirt
   -- (x) Exercise 8-4: Large Shirts
   -- (x) Exercise 8-5: Cities
   - (x)  Return Values
   -- (x) Returning a Simple Value
   -- (x) Making an Argument Optional
   -- (x) Returning a Dictionary
   -- (x) Using a Function with a while Loop
   -- (x) Exercise 8-6: City Names
   -- (x) Exercise 8-7: Album
   -- (x) Exercise 8-8: User Albums
   - (x)  Passing a List
   -- (x) Modifying a List in a Function
   -- (x) Preventing a Function from Modifying a List
   -- (x) Exercise 8-9: Messages
   -- (x) Exercise 8-10: Sending Messages
   -- (x) Exercise 8-11: Archived Messages
   - (x)  Passing an Arbitrary Number of Arguments
   -- (x) Mixing Positional and Arbitrary Arguments
   -- (x) Using Arbitrary Keyword Arguments
   -- (x) Exercise 8-12: Sandwiches
   -- (x) Exercise 8-13: User Profile
   -- (x) Exercise 8-14: Cars
   - (x)  Storing Your Functions in Modules
   -- (x) Importing an Entire Module
   -- (x) Importing Specific Functions
   -- (x) Using as to Give a Function an Alias
   -- (x) Using as to Give a Module an Alias
   -- (x) Importing All Functions in a Module
   - (x)  Styling Functions
   -- (x) Exercise 8-15: Printing Models
   -- (x) Exercise 8-16: Imports
   -- (x) Exercise 8-17: Styling Functions
   - (x)  Summary
** Chapter 9: Classes
   - (x)  Creating and Using a Class
   -- (x)  Creating the Dog Class
   -- (x) The __init__()  Method
   -- (x) Making an Instance from a Class
   -- (x) Exercise 9-1: Restaurant
   -- (x) Exercise 9-2: Three Restaurants
   -- (x) Exercise 9-3: Users
   - (x)  Working with Classes and Instances
   -- (x) The Car Class
   -- (x) Setting a Default Value for an Attribute
   -- (x) Modifying Attribute Values
   -- (x) Exercise 9-4: Number Served
   -- (x) Exercise 9-5: Login Attempts
   - (x)  Inheritance
   -- (x) The __init__()  Method for a Child Class
   -- (x) Defining Attributes and Methods for the Child Class
   -- (x) Overriding Methods from the Parent Class
   -- (x) Instances as Attributes
   -- (x) Modeling Real-World Objects
   -- (x) Exercise 9-6: Ice Cream Stand
   -- (x) Exercise 9-7: Admin
   -- (x) Exercise 9-8: Privileges
   -- (x) Exercise 9-9: Battery Upgrade
   - (x)  Importing Classes
   -- (x) Importing a Single Class
   -- (x) Storing Multiple Classes in a Module
   -- (x) Importing Multiple Classes from a Module
   -- (x) Importing an Entire Module
   -- (x) Importing All Classes from a Module
   -- (x) Importing a Module into a Module
   -- (x) Using Aliases
   -- (x) Finding Your Own Workflow
   -- (x) Exercise 9-10: Imported Restaurant
   -- (x) Exercise 9-11: Imported Admin
   -- (x) Exercise 9-12: Multiple Modules
   - (x)  The Python Standard Library
   -- (x) Exercise 9-13: Dice
   -- (x) Exercise 9-14: Lottery
   -- (x) Exercise 9-15: Lottery Analysis
   -- (x) Exercise 9-16: Python Module of the Week
   - (x)  Styling Classes
   - (x)  Summary
** Chapter 10: Files and Exceptions
   - (x)  Reading from a File
   -- (x) Reading the Contents of a File
   -- (x) Relative and Absolute File Paths
   -- (x) Accessing a Fileâ€™s Lines
   -- (x) Working with a Fileâ€™s Contents
   -- (x) Large Files: One Million Digits
   -- (x) Is Your Birthday Contained in Pi?
   -- (x) Exercise 10-1: Learning Python
   -- (x) Exercise 10-2: Learning C
   -- (x) Exercise 10-3: Simpler Code
   - (x)  Writing to a File
   -- (x) Writing a Single Line
   -- (x) Writing Multiple Lines
   -- (x) Exercise 10-4: Guest
   -- (x) Exercise 10-5: Guest Book
   - (x)  Exceptions
   -- (x) Handling the ZeroDivisionError Exception
   -- (x) Using try-except Blocks
   -- (x) Using Exceptions to Prevent Crashes
   -- (x) The else Block
   -- (x) Handling the FileNotFoundError Exception
   -- (x) Analyzing Text
   -- (x) Working with Multiple Files
   -- (x) Failing Silently
   -- (x) Deciding Which Errors to Report
   -- (x) Exercise 10-6: Addition
   -- (x) Exercise 10-7: Addition Calculator
   -- (x) Exercise 10-8: Cats and Dogs
   -- (x) Exercise 10-9: Silent Cats and Dogs
   -- (x) Exercise 10-10: Common Words
   - (x)  Storing Data
   -- (x) Using json.dumps()  and json.loads() 
   -- (x) Saving and Reading User-Generated Data
   -- (x) Refactoring
   -- (x) Exercise 10-11: Favorite Number
   -- (x) Exercise 10-12: Favorite Number Remembered
   -- (x) Exercise 10-13: User Dictionary
   -- (x) Exercise 10-14: Verify User
   - (x)  Summary
** (x) Chapter 11: Testing Your Code
   - (x)  ( )  Installing pytest with pip
   -- (x) Updating pip
   -- (x) Installing pytest
   - (x)  Testing a Function
   -- (x) Unit Tests and Test Cases
   -- (x) A Passing Test
   -- (x) Running a Test
   -- (x) A Failing Test
   -- (x) Responding to a Failed Test
   -- (x) Adding New Tests
   -- (x) Exercise 11-1: City, Country
   -- (x) Exercise 11-2: Population
   - (x)  Testing a Class
   -- (x) A Variety of Assertions
   -- (x) A Class to Test
   -- (x) Testing the AnonymousSurvey Class
   -- (x) Using Fixtures
   -- (x) Exercise 11-3: Employee
   - (x)  Summary
* Part II: Projects
** Chapter 12: A Ship That Fires Bullets
   - (x) Planning Your Project
   - (x) Installing Pygame
   - (x) Starting the Game Project
   -- (x) Creating a Pygame Window and Responding to User Input
   -- (x) Controlling the Frame Rate
   -- (x) Setting the Background Color
   -- (x) Creating a Settings Class
   - (x) Adding the Ship Image
   -- (x) Creating the Ship Class
   -- (x) Drawing the Ship to the Screen
   - (x) Refactoring: The _check_events()  and _update_screen()  Methods
   -- (x) The _check_events()  Method
   -- (x) The _update_screen()  Method
   -- (x) Exercise 12-1: Blue Sky
   -- (x) Exercise 12-2: Game Character
   - (x) Piloting the Ship
   -- (x) Responding to a Keypress
   -- (x) Allowing Continuous Movement
   -- (x) Moving Both Left and Right
   -- (x) Adjusting the Shipâ€™s Speed
   -- (x) Limiting the Shipâ€™s Range
   -- (x) Refactoring _check_events() 
   -- (x) Pressing Q to Quit
   -- (x) Running the Game in Fullscreen Mode
   - (x) A Quick Recap
   -- (x) alien_invasion.py
   -- (x) settings.py
   -- (x) ship.py
   -- (x) Exercise 12-3: Pygame Documentation
   -- (x) Exercise 12-4: Rocket
   -- (x) Exercise 12-5: Keys
   - (x) Shooting Bullets
   -- (x) Adding the Bullet Settings
   -- (x) Creating the Bullet Class
   -- (x) Storing Bullets in a Group
   -- (x) Firing Bullets
   -- (x) Deleting Old Bullets
   -- (x) Limiting the Number of Bullets
   -- (x) Creating the _update_bullets()  Method
   -- (x) Exercise 12-6: Sideways Shooter
   - (x) Summary
** Chapter 13: Aliens!
   - (x) Reviewing the Project
   - (x) Creating the First Alien
   - (x) Creating the Alien Class
   - (x) Creating an Instance of the Alien
*** (x) Building the Alien Fleet [p294]{https://calibre.cupcakerob.nl/get/PDF/24/calibre-library?content_disposition=inline#p294}
    - (x) Creating a Row of Aliens
    - (x) Refactoring _create_fleet()
    - (x) Adding Rows
*** (x) Exercise 13-1: Stars
*** (x) Exercise 13-2: Better Stars
*** (x) Making the Fleet Move
    -- (x) Moving the Aliens Right
    -- (x) Creating Settings for Fleet Direction
    -- (x) Checking Whether an Alien Has Hit the Edge
    -- (x) Dropping the Fleet and Changing Direction
*** (x) Exercise 13-3: Raindrops [p301]{https://calibre.cupcakerob.nl/get/PDF/24/calibre-library?content_disposition=inline#p301}
*** (x) Exercise 13-4: Steady Rain
    ---  2023-09-24 11:12
*** (-) Shooting Aliens
    -- (x) Detecting Bullet Collisions
    -- (x) Making Larger Bullets for Testing
    -- (x) Repopulating the Fleet
    -- (x) Speeding Up the Bullets
    -- (x) Refactoring _update_bullets() 
    --- 2023-09-24 11:43
*** (_) Exercise 13-5: Sideways Shooter Part 2 [p305]{https://calibre.cupcakerob.nl/get/PDF/24/calibre-library?content_disposition=inline#p305}
*** ( ) Ending the Game
    -- (x) Detecting Alien-Ship Collisions
    -- (x) Responding to Alien-Ship Collisions
    -- ( ) Aliens That Reach the Bottom of the Screen [p308]{https://calibre.cupcakerob.nl/get/PDF/24/calibre-library?content_disposition=inline#p308}
    -- ( ) Game Over!
    -- ( ) Identifying When Parts of the Game Should Run
    -- ( ) Exercise 13-6: Game Over
    - ( ) Summary
** Chapter 14: Scoring
*** ( ) Adding the Play Button
    - ( ) Creating a Button Class
    - ( ) Drawing the Button to the Screen
    - ( ) Starting the Game
    - ( ) Resetting the Game
    - ( ) Deactivating the Play Button
    - ( ) Hiding the Mouse Cursor
    - ( ) Exercise 14-1: Press P to Play
    - ( ) Exercise 14-2: Target Practice
*** ( ) Leveling Up
    - ( ) Modifying the Speed Settings
    - ( ) Resetting the Speed
    - ( ) Exercise 14-3: Challenging Target Practice
    - ( ) Exercise 14-4: Difficulty Levels
*** ( ) Scoring
    - ( ) Displaying the Score
    - ( ) Making a Scoreboard
    - ( ) Updating the Score as Aliens Are Shot Down
    - ( ) Resetting the Score
    - ( ) Making Sure to Score All Hits
    - ( ) Increasing Point Values
    - ( ) Rounding the Score
    - ( ) High Scores
    - ( ) Displaying the Level
    - ( ) Displaying the Number of Ships
    - ( ) Exercise 14-5: All-Time High Score
    - ( ) Exercise 14-6: Refactoring
    - ( ) Exercise 14-7: Expanding the Game
    - ( ) Exercise 14-8: Sideways Shooter, Final Version
*** ( ) Summary
** Chapter 15: Generating Data
*** ( ) Installing Matplotlib
*** ( ) Plotting a Simple Line Graph
    - ( ) Changing the Label Type and Line Thickness
    - ( ) Correcting the Plot
    -- ( ) Using Built-in Styles
    -- ( ) Plotting and Styling Individual Points with scatter() 
    -- ( ) Plotting a Series of Points with scatter() 
    -- ( ) Calculating Data Automatically
    -- ( ) Customizing Tick Labels
    -- ( ) Defining Custom Colors
    -- ( ) Using a Colormap
    -- ( ) Saving Your Plots Automatically
    -- ( ) Exercise 15-1. Cubes
    -- ( ) Exercise 15-2: Colored Cubes
    - ( ) Random Walks
    -- ( ) Creating the RandomWalk Class
    -- ( ) Choosing Directions
    -- ( ) Plotting the Random Walk
    -- ( ) Generating Multiple Random Walks
    -- ( ) Styling the Walk
    -- ( ) Exercise 15-3: Molecular Motion
    -- ( ) Exercise 15-4: Modified Random Walks
    -- ( ) Exercise 15-5: Refactoring
    - ( ) Rolling Dice with Plotly
    -- ( ) Installing Plotly
    -- ( ) Creating the Die Class
    -- ( ) Rolling the Die
    -- ( ) Analyzing the Results
    -- ( ) Making a Histogram
    -- ( ) Customizing the Plot
    -- ( ) Rolling Two Dice
    -- ( ) Further Customizations
    -- ( ) Rolling Dice of Different Sizes
    -- ( ) Saving Figures
    -- ( ) Exercise 15-6: Two D8s
    -- ( ) Exercise 15-7: Three Dice
    -- ( ) Exercise 15-8: Multiplication
    -- ( ) Exercise 15-9: Die Comprehensions
    -- ( ) Exercise 15-10: Practicing with Both Libraries
    - ( ) Summary
** Chapter 16: Downloading Data
***  ( ) The CSV File Format
     -- ( ) Parsing the CSV File Headers
     -- ( ) Printing the Headers and Their Positions
     -- ( ) Extracting and Reading Data
     -- ( ) Plotting Data in a Temperature Chart
     -- ( ) The datetime Module
     -- ( ) Plotting Dates
     -- ( ) Plotting a Longer Timeframe
     -- ( ) Plotting a Second Data Series
     -- ( ) Shading an Area in the Chart
     -- ( ) Error Checking
     -- ( ) Downloading Your Own Data
     -- ( ) Exercise 16-1: Sitka Rainfall
     -- ( ) Exercise 16-2: Sitkaâ€“Death Valley Comparison
     -- ( ) Exercise 16-3: San Francisco
     -- ( ) Exercise 16-4: Automatic Indexes
     -- ( ) Exercise 16-5: Explore
*** ( ) Mapping Global Datasets: GeoJSON Format
    -- ( ) Downloading Earthquake Data
    -- ( ) Examining GeoJSON Data
    -- ( ) Making a List of All Earthquakes
    -- ( ) Extracting Magnitudes
    -- ( ) Extracting Location Data
    -- ( ) Building a World Map
    -- ( ) Representing Magnitudes
    -- ( ) Customizing Marker Colors
    -- ( ) Other Color Scales
    -- ( ) Adding Hover Text
    -- ( ) Exercise 16-6: Refactoring
    -- ( ) Exercise 16-7: Automated Title
    -- ( ) Exercise 16-8: Recent Earthquakes
    -- ( ) Exercise 16-9: World Fires
*** ( ) Summary
** Chapter 17: Working with APIs
   - ( ) Using an API
   -- ( ) Git and GitHub
   -- ( ) Requesting Data Using an API Call
   -- ( ) Installing Requests
   -- ( ) Processing an API Response
   -- ( ) Working with the Response Dictionary
   -- ( ) Summarizing the Top Repositories
   -- ( ) Monitoring API Rate Limits
   - ( ) Visualizing Repositories Using Plotly
   -- ( ) Styling the Chart
   -- ( ) Adding Custom Tooltips
   -- ( ) Adding Clickable Links
   -- ( ) Customizing Marker Colors
   -- ( ) More About Plotly and the GitHub API
   - ( ) The Hacker News API
   -- ( ) Exercise 17-1: Other Languages
   -- ( ) Exercise 17-2: Active Discussions
   -- ( ) Exercise 17-3: Testing python_repos.py
   -- ( ) Exercise 17-4: Further Exploration
   - ( ) Summary
** Chapter 18: Getting Started with Django
   - ( ) Setting Up a Project
   -- ( ) Writing a Spec
   -- ( ) Creating a Virtual Environment
   -- ( ) Activating the Virtual Environment
   -- ( ) Installing Django
   -- ( ) Creating a Project in Django
   -- ( ) Creating the Database
   -- ( ) Viewing the Project
   -- ( ) Exercise 18-1: New Projects
   - ( ) Starting an App
   -- ( ) Defining Models
   -- ( ) Activating Models
   -- ( ) The Django Admin Site
   -- ( ) Defining the Entry Model
   -- ( ) Migrating the Entry Model
   -- ( ) Registering Entry with the Admin Site
   -- ( ) The Django Shell
   -- ( ) Exercise 18-2: Short Entries
   -- ( ) Exercise 18-3: The Django API
   -- ( ) Exercise 18-4: Pizzeria
   - ( ) Making Pages: The Learning Log Home Page
   -- ( ) Mapping a URL
   -- ( ) Writing a View
   -- ( ) Writing a Template
   -- ( ) Exercise 18-5: Meal Planner
   -- ( ) Exercise 18-6: Pizzeria Home Page
   - ( ) Building Additional Pages
   -- ( ) Template Inheritance
   -- ( ) The Topics Page
   -- ( ) Individual Topic Pages
   -- ( ) Exercise 18-7: Template Documentation
   -- ( ) Exercise 18-8: Pizzeria Pages
   - ( ) Summary
** Chapter 19: User Accounts
   - ( ) Allowing Users to Enter Data
   -- ( ) Adding New Topics
   -- ( ) Adding New Entries
   -- ( ) Editing Entries
   -- ( ) Exercise 19-1: Blog
   - ( ) Setting Up User Accounts
   -- ( ) The accounts App
   -- ( ) The Login Page
   -- ( ) Logging Out
   -- ( ) The Registration Page
   -- ( ) Exercise 19-2: Blog Accounts 
   - ( ) Allowing Users to Own Their Data
   -- ( ) Restricting Access with @login_required
   -- ( ) Connecting Data to Certain Users
   -- ( ) Restricting Topics Access to Appropriate Users
   -- ( ) Protecting a Userâ€™s Topics
   -- ( ) Protecting the edit_entry Page
   -- ( ) Associating New Topics with the Current User
   -- ( ) Exercise 19-3: Refactoring
   -- ( ) Exercise 19-4: Protecting new_entry
   -- ( ) Exercise 19-5: Protected Blog
   - ( ) Summary
** Chapter 20: Styling and Deploying an App
   - ( ) Styling Learning Log
   -- ( ) The django-bootstrap5 App
   -- ( ) Using Bootstrap to Style Learning Log
   -- ( ) Modifying base.html
   -- ( ) Styling the Home Page Using a Jumbotron
   -- ( ) Styling the Login Page
   -- ( ) Styling the Topics Page
   -- ( ) Styling the Entries on the Topic Page
   -- ( ) Exercise 20-1: Other Forms
   -- ( ) Exercise 20-2: Stylish Blog
   - ( ) Deploying Learning Log
   -- ( ) Making a Platform.sh Account
   -- ( ) Installing the Platform.sh CLI
   -- ( ) Installing platformshconfig
   -- ( ) Creating a requirements.txt File
   -- ( ) Additional Deployment Requirements
   -- ( ) Adding Configuration Files
   -- ( ) Modifying settings.py for Platform.sh
   -- ( ) Using Git to Track the Projectâ€™s Files
   -- ( ) Creating a Project on Platform.sh
   -- ( ) Pushing to Platform.sh
   -- ( ) Viewing the Live Project
   -- ( ) Refining the Platform.sh Deployment
   -- ( ) Creating Custom Error Pages
   -- ( ) Ongoing Development
   -- ( ) Deleting a Project on Platform.sh
   -- ( ) Exercise 20-3: Live Blog
   -- ( ) Exercise 20-4: Extended Learning Log
   - ( ) Summary
* Appendix A: Installation and Troubleshooting
  - ( ) Python on Windows
  -- ( )  Using py Instead of python
  -- ( )  Rerunning the Installer
  - ( ) Python on macOS
  -- ( )  Accidentally Installing Appleâ€™s Version of Python
  -- ( )  Python 2 on Older Versions of macOS
  - ( ) Python on Linux
  -- ( )  Using the Default Python Installation
  -- ( )  Installing the Latest Version of Python
  - ( ) Checking Which Version of Python Youâ€™re Using
  - ( ) Python Keywords and Built-in Functions
  -- ( )  Python Keywords
  -- ( )  Python Built-in Functions
* Appendix B: Text Editors and IDEs
  - ( ) Working Efficiently with VS Code
  -- ( ) Configuring VS Code
  -- ( ) VS Code Shortcuts
  - ( ) Other Text Editors and IDEs
  -- ( ) IDLE
  -- ( ) Geany
  -- ( ) Sublime Text
  -- ( ) Emacs and Vim
  -- ( ) PyCharm
  -- ( ) Jupyter Notebooks
* Appendix C: Getting Help
  - ( ) First Steps
  -- ( ) Try It Again
  -- ( ) Take a Break
  -- ( ) Refer to This Bookâ€™s Resources
  - ( ) Searching Online
  -- ( ) Stack Overflow
  -- ( ) The Official Python Documentation
  -- ( ) Official Library Documentation
  -- ( ) r/learnpython
  -- ( ) Blog Posts
  - ( ) Discord
  - ( ) Slack
* Appendix D: Using Git for Version Control
  - ( ) Installing Git
  -- ( ) Configuring Git
  - ( ) Making a Project
  - ( ) Ignoring Files
  - ( ) Initializing a Repository
  - ( ) Checking the Status
  - ( ) Adding Files to the Repository
  - ( ) Making a Commit
  - ( ) Checking the Log
  - ( ) The Second Commit
  - ( ) Abandoning Changes
  - ( ) Checking Out Previous Commits
  - ( ) Deleting the Repository
* Appendix E: Troubleshooting Deployments
  - ( ) Understanding Deployments
  - ( ) Basic Troubleshooting
  -- ( ) Follow Onscreen Suggestions
  -- ( ) Read the Log Output
  - ( ) OS-Specific Troubleshooting
  -- ( ) Deploying from Windows
  -- ( ) Deploying from macOS
  -- ( ) Deploying from Linux
  - ( ) Other Deployment Approaches
